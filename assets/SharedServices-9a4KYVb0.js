import{d as s}from"./index-ykkmzoko.js";const w=async(t,o)=>{const r=o?s.ADD_NEW_PCB_COMPANY_URL():s.ADD_NEW_PCB_USER_URL();try{const e=await fetch(r,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)});if(!e.ok){const a=await e.text();throw new Error(`Failed to add PCB: ${a}`)}return await e.json()}catch(e){console.error("Error adding PCB:",e.message),setError(e.message)}},_=async(t,o)=>{const r=o?s.DELETE_PCB_COMPANY_URL(t):s.DELETE_PCB_USER_URL(t);try{const e=await fetch(r,{method:"DELETE",headers:{"Content-Type":"application/json"}});if(!e.ok){const a=await e.text();throw new Error(`Failed to delete PCB: ${a}`)}return await e.json()}catch(e){throw console.error("Error deleting PCB:",e.message),e}},h=async(t,o,r,e,c)=>{const a=t?s.UPDATE_USER_INFO_COMPANY_URL(o):s.UPDATE_USER_INFO_USER_URL(o);try{const n=await fetch(a,{method:"PATCH",headers:{"Content-Type":"application/json"},body:JSON.stringify(r)});if(!n.ok){const i=await n.text();throw new Error(`Failed to update user: ${i}`)}const d=await n.json();e(!0),c("User updated successfully! ðŸŽ‰")}catch(n){console.error("Error updating user:",n.message)}},p=async t=>{const o=s.SEND_FEEDBACK_URL();try{const r=await fetch(`${o}`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)});if(!r.ok)throw new Error("Network response was not ok");return await r.json()}catch(r){throw console.error("Error submitting feedback:",r),r}};export{w as A,_ as D,h as U,p as s};
